{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductService = /*#__PURE__*/(() => {\n  class ProductService {\n    constructor(http) {\n      this.http = http;\n      this.BASE_PRODUCTS_URL = '/api/products';\n      this.BASE_PRODUCT_CATEGORIES_URL = '/api/product-categories';\n    }\n    getProduct(productId) {\n      return this.http.get(`${this.BASE_PRODUCTS_URL}/${productId}`);\n    }\n    getProductList(page, pageSize) {\n      return this.getProductsByCondition('?', page, pageSize);\n    }\n    getProductListByCategory(categoryId, page, pageSize) {\n      return this.getProductsByCondition(`/search/category-id?id=${categoryId}&`, page, pageSize);\n    }\n    getProductCategories() {\n      return this.http.get(this.BASE_PRODUCT_CATEGORIES_URL).pipe(map(result => result._embedded.product_categories));\n    }\n    getProductCategoryById(id) {\n      return this.http.get(`${this.BASE_PRODUCT_CATEGORIES_URL}/${id}`);\n    }\n    getProductsByKeyword(keyword, page, pageSize) {\n      return this.getProductsByCondition(`/search/name-contains?name=${keyword}&`, page, pageSize);\n    }\n    getProductsByCondition(conditionUrl, page, pageSize) {\n      return this.http.get(`${this.BASE_PRODUCTS_URL}${conditionUrl}page=${page}&size=${pageSize}`);\n    }\n  }\n  ProductService.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  ProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}